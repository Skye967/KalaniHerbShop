{"ast":null,"code":"import { createStore, configureStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListReducers, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer, productReviewCreateReducer, productTopRatedReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from './reducers/userReducers';\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer, orderListReducer, orderDeliverReducer } from './reducers/orderReducers';\nconst reducer = combineReducers({\n  productList: productListReducers,\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productReviewCreate: productReviewCreateReducer,\n  productTopRated: productTopRatedReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userUpdate: userUpdateReducer,\n  userDelete: userDeleteReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyReducer,\n  orderList: orderListReducer,\n  orderDeliver: orderDeliverReducer\n});\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst cartItmesFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst initialState = {\n  cart: {\n    cartItems: cartItmesFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"names":["createStore","configureStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducers","productDetailsReducer","productDeleteReducer","productCreateReducer","productUpdateReducer","productReviewCreateReducer","productTopRatedReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","userListReducer","userDeleteReducer","userUpdateReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","orderListMyReducer","orderListReducer","orderDeliverReducer","reducer","productList","productDetails","productDelete","productCreate","productUpdate","productReviewCreate","productTopRated","cart","userLogin","userRegister","userDetails","userUpdateProfile","userList","userUpdate","userDelete","orderCreate","orderDetails","orderPay","orderListMy","orderList","orderDeliver","userInfoFromStorage","localStorage","getItem","JSON","parse","shippingAddressFromStorage","cartItmesFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"sources":["/Users/akabigdaddy/Desktop/Users/projects/djangoEcommerce/backend/frontend/src/store.js"],"sourcesContent":["import { createStore, configureStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport {\n    productListReducers,\n    productDetailsReducer,\n    productDeleteReducer,\n    productCreateReducer,\n    productUpdateReducer,\n    productReviewCreateReducer,\n    productTopRatedReducer,\n    } from './reducers/productReducers'\nimport { cartReducer } from './reducers/cartReducers'\nimport { \n    userLoginReducer,\n    userRegisterReducer,\n    userDetailsReducer,\n    userUpdateProfileReducer,\n    userListReducer,\n    userDeleteReducer,\n    userUpdateReducer\n     } from './reducers/userReducers'\nimport { \n    orderCreateReducer,\n    orderDetailsReducer,\n    orderPayReducer,\n    orderListMyReducer,\n    orderListReducer,\n    orderDeliverReducer \n    } from './reducers/orderReducers'\n\nconst reducer = combineReducers({\n    productList: productListReducers,\n    productDetails: productDetailsReducer,\n    productDelete: productDeleteReducer,\n    productCreate: productCreateReducer,\n    productUpdate: productUpdateReducer,\n    productReviewCreate: productReviewCreateReducer,\n    productTopRated: productTopRatedReducer,\n    cart: cartReducer,\n    userLogin: userLoginReducer,\n    userRegister: userRegisterReducer,\n    userDetails: userDetailsReducer,\n    userUpdateProfile: userUpdateProfileReducer,\n    userList: userListReducer,\n    userUpdate: userUpdateReducer,\n    userDelete: userDeleteReducer,\n    orderCreate: orderCreateReducer,\n    orderDetails: orderDetailsReducer,\n    orderPay: orderPayReducer,\n    orderListMy: orderListMyReducer,\n    orderList: orderListReducer,\n    orderDeliver: orderDeliverReducer,\n})\n\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? \n    JSON.parse(localStorage.getItem('userInfo')) : null\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? \n    JSON.parse(localStorage.getItem('shippingAddress')) : {}\n\nconst cartItmesFromStorage = localStorage.getItem('cartItems') ? \n    JSON.parse(localStorage.getItem('cartItems')) : []\n\nconst initialState = {\n    cart:{\n        cartItems: cartItmesFromStorage,\n        shippingAddress: shippingAddressFromStorage\n    },\n    userLogin:{userInfo: userInfoFromStorage},\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(reducer, initialState, \n    composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,cAAtB,EAAsCC,eAAtC,EAAuDC,eAAvD,QAA8E,OAA9E;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,SACIC,mBADJ,EAEIC,qBAFJ,EAGIC,oBAHJ,EAIIC,oBAJJ,EAKIC,oBALJ,EAMIC,0BANJ,EAOIC,sBAPJ,QAQW,4BARX;AASA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SACIC,gBADJ,EAEIC,mBAFJ,EAGIC,kBAHJ,EAIIC,wBAJJ,EAKIC,eALJ,EAMIC,iBANJ,EAOIC,iBAPJ,QAQY,yBARZ;AASA,SACIC,kBADJ,EAEIC,mBAFJ,EAGIC,eAHJ,EAIIC,kBAJJ,EAKIC,gBALJ,EAMIC,mBANJ,QAOW,0BAPX;AASA,MAAMC,OAAO,GAAGzB,eAAe,CAAC;EAC5B0B,WAAW,EAAEtB,mBADe;EAE5BuB,cAAc,EAAEtB,qBAFY;EAG5BuB,aAAa,EAAEtB,oBAHa;EAI5BuB,aAAa,EAAEtB,oBAJa;EAK5BuB,aAAa,EAAEtB,oBALa;EAM5BuB,mBAAmB,EAAEtB,0BANO;EAO5BuB,eAAe,EAAEtB,sBAPW;EAQ5BuB,IAAI,EAAEtB,WARsB;EAS5BuB,SAAS,EAAEtB,gBATiB;EAU5BuB,YAAY,EAAEtB,mBAVc;EAW5BuB,WAAW,EAAEtB,kBAXe;EAY5BuB,iBAAiB,EAAEtB,wBAZS;EAa5BuB,QAAQ,EAAEtB,eAbkB;EAc5BuB,UAAU,EAAErB,iBAdgB;EAe5BsB,UAAU,EAAEvB,iBAfgB;EAgB5BwB,WAAW,EAAEtB,kBAhBe;EAiB5BuB,YAAY,EAAEtB,mBAjBc;EAkB5BuB,QAAQ,EAAEtB,eAlBkB;EAmB5BuB,WAAW,EAAEtB,kBAnBe;EAoB5BuB,SAAS,EAAEtB,gBApBiB;EAqB5BuB,YAAY,EAAEtB;AArBc,CAAD,CAA/B;AAwBA,MAAMuB,mBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GACuB,IADnD;AAGA,MAAMG,0BAA0B,GAAGJ,YAAY,CAACC,OAAb,CAAqB,iBAArB,IAC/BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAD+B,GACuB,EAD1D;AAGA,MAAMI,oBAAoB,GAAGL,YAAY,CAACC,OAAb,CAAqB,WAArB,IACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADyB,GACuB,EADpD;AAGA,MAAMK,YAAY,GAAG;EACjBrB,IAAI,EAAC;IACDsB,SAAS,EAAEF,oBADV;IAEDG,eAAe,EAAEJ;EAFhB,CADY;EAKjBlB,SAAS,EAAC;IAACuB,QAAQ,EAAEV;EAAX;AALO,CAArB;AAQA,MAAMW,UAAU,GAAG,CAACxD,KAAD,CAAnB;AAEA,MAAMyD,KAAK,GAAG7D,WAAW,CAAC2B,OAAD,EAAU6B,YAAV,EACrBnD,mBAAmB,CAACF,eAAe,CAAC,GAAGyD,UAAJ,CAAhB,CADE,CAAzB;AAGA,eAAeC,KAAf"},"metadata":{},"sourceType":"module"}