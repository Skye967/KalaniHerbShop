{"ast":null,"code":"var _jsxFileName = \"/Users/akabigdaddy/Desktop/Users/projects/djangoEcommerce/frontend/src/screens/ProfileScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, useParams, useLocation, useNavigate } from 'react-router-dom';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { getUserDetails, updateUserProfile } from '../actions/userActions';\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProfileScreen() {\n  _s();\n\n  const params = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    loading,\n    error,\n    user\n  } = userDetails;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile);\n  const {\n    success\n  } = userUpdateProfile;\n  useEffect(() => {\n    if (!userInfo) {\n      navigate('/login/');\n    } else {\n      if (!user || !user.name || success) {\n        dispatch({\n          type: USER_UPDATE_PROFILE_RESET\n        });\n        dispatch(getUserDetails('profile'));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [userInfo, navigate, dispatch, user, success]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match');\n    } else {\n      dispatch(updateUserProfile({\n        'id': user._id,\n        'name': name,\n        'email': email,\n        'password': password\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: [/*#__PURE__*/_jsxDEV(Col, {\n      md: 3,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"User Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), message && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"name\",\n            placeholder: \"Enter Name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"email\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email Address \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            type: \"email\",\n            placeholder: \"Enter Email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"password\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Enter Password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"passwordConfirm\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Confirm Password \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"Confirm Password\",\n            value: confirmPassword,\n            onChange: e => setConfirmPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Col, {\n      md: 9,\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"My Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProfileScreen, \"DtuZpJ6+uiFtkEFsb+ppAW1lZ/Y=\", false, function () {\n  return [useParams, useLocation, useNavigate, useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = ProfileScreen;\nexport default ProfileScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileScreen\");","map":{"version":3,"names":["React","useState","useEffect","Link","useParams","useLocation","useNavigate","Form","Button","Row","Col","useDispatch","useSelector","Loader","Message","getUserDetails","updateUserProfile","USER_UPDATE_PROFILE_RESET","ProfileScreen","params","location","navigate","dispatch","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","userDetails","state","loading","error","user","userLogin","userInfo","userUpdateProfile","success","type","submitHandler","e","preventDefault","_id","target","value"],"sources":["/Users/akabigdaddy/Desktop/Users/projects/djangoEcommerce/frontend/src/screens/ProfileScreen.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { Link, useParams, useLocation, useNavigate } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\n\nfunction ProfileScreen() {\n    const params = useParams()\n    const location = useLocation()\n    const navigate = useNavigate()\n    const dispatch = useDispatch()\n\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState('')\n\n\n    const userDetails = useSelector(state => state.userDetails)\n    const {loading, error, user} = userDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const {userInfo} = userLogin\n\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n    const {success} = userUpdateProfile\n\n    useEffect(() => {\n        if(!userInfo){\n            navigate('/login/')\n        }else{\n            if(!user || !user.name || success){\n                dispatch({type: USER_UPDATE_PROFILE_RESET})\n                dispatch(getUserDetails('profile'))\n            }else{\n                setName(user.name)\n                setEmail(user.email)\n            }\n        }\n    },[userInfo, navigate, dispatch, user, success])\n\n\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        \n\n        if(password !== confirmPassword){\n            setMessage('Passwords do not match')\n        }else{\n            dispatch(updateUserProfile({\n                'id': user._id,\n                'name': name,\n                'email': email,\n                'password': password,\n            }))\n        }\n    }\n\n\n\n\n  return (\n    <Row>\n        <Col md={3}>\n            <h2>User Profile</h2>\n            {message && <Message variant='danger'>{message}</Message>}\n        {loading && <Loader/>}\n        <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n                <Form.Label>Name</Form.Label>\n                <Form.Control\n                required\n                type='name'\n                placeholder='Enter Name'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n                >\n                </Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='email'>\n                <Form.Label>Email Address </Form.Label>\n                <Form.Control\n                required\n                type='email'\n                placeholder='Enter Email'\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                >\n                </Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='password'>\n                <Form.Label>Password </Form.Label>\n                <Form.Control\n                type='password'\n                placeholder='Enter Password'\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                >\n                </Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='passwordConfirm'>\n                <Form.Label>Confirm Password </Form.Label>\n                <Form.Control\n                type='password'\n                placeholder='Confirm Password'\n                value={confirmPassword}\n                onChange={(e) => setConfirmPassword(e.target.value)}\n                >\n                </Form.Control>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>\n                Update\n            </Button>\n        </Form>\n        </Col>\n\n        <Col md={9}>\n            <h2>My Order</h2>\n        </Col>\n    </Row>\n  )\n}\n\nexport default ProfileScreen"],"mappings":"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"},"metadata":{},"sourceType":"module"}